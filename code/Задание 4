#不跳过这些短信号，而是采用其他处理方式
import matplotlib
matplotlib.use('TkAgg')
import mne
import numpy as np
import matplotlib.pyplot as plt
from scipy.signal import butter, filtfilt
import pywt
import pandas as pd
import os


def butter_lowpass(cutoff, fs, order=5):
    nyquist = 0.5 * fs
    normal_cutoff = cutoff / nyquist
    b, a = butter(order, normal_cutoff, btype='low', analog=False)
    return b, a


def butter_lowpass_filter(data, cutoff, fs, order=5):
    # 根据信号长度动态调整滤波器阶数  Динамически настраивайте порядок фильтра в зависимости от длины сигнала
    if len(data) < 2 * order:
        order = len(data) // 2
    b, a = butter_lowpass(cutoff, fs, order=order)
    # 手动设置 padlen 为信号长度的一半，但不超过 512
    padlen = min(len(data) // 2, 512)
    y = filtfilt(b, a, data, padlen=padlen)
    return y


# 从桌面加载 EDF 格式的脑电图记录   Загрузка данных
file_path = 'D:/桌面/eeg1.edf' # 请替换为实际的文件路径
raw = mne.io.read_raw_edf(file_path, preload=True)

# 从桌面加载另一个数据集的注释，确定癫痫发作的位置
# 假设注释文件是 CSV 格式，每列代表一个病人 ID，0 表示无癫痫发作，1 表示有癫痫发作
annotations_file_path = 'D:/桌面/annotations_2017_A .csv' # 请替换为实际的文件路径
annotations_df = pd.read_csv(annotations_file_path)

# 选择其中一列（这里选择第一列作为示例，可按需修改）
patient_id = annotations_df.columns[0]
patient_annotations = annotations_df[patient_id].values

# 假设采样频率相同，根据采样频率确定每个样本对应的时间点
fs = raw.info['sfreq']
time_points = np.arange(len(patient_annotations)) / fs

# 找出癫痫发作的索引
seizure_indices = np.where(patient_annotations == 1)[0]

if len(seizure_indices) > 0:
    # 找到连续的癫痫发作段  Найти последовательные сегменты припадка
    seizure_segments = []
    current_segment = [seizure_indices[0]]
    for i in range(1, len(seizure_indices)):
        if seizure_indices[i] == seizure_indices[i - 1] + 1:
            current_segment.append(seizure_indices[i])
        else:
            seizure_segments.append(current_segment)
            current_segment = [seizure_indices[i]]
    seizure_segments.append(current_segment)

    # 处理每个癫痫发作段
    for idx, segment in enumerate(seizure_segments):
        tmin = time_points[segment[0]]
        tmax = time_points[segment[-1]]
        raw_seizure = raw.copy().crop(tmin=tmin, tmax=tmax)
        data = raw_seizure.get_data()
        average_signal = np.mean(data, axis=0)

        # 从信号中去除所有高于 60 Hz 的频率   Удалить из сигнала все частоты выше 60 Гц
        cutoff = 60
        filtered_data = butter_lowpass_filter(average_signal, cutoff, fs)

        # 创建一个包含 3 个子图的画布
        fig, axes = plt.subplots(3, 1, figsize=(10, 18))

        # 绘制癫痫发作时脑电图时间依赖性图表
        axes[0].plot(raw_seizure.times, average_signal)
        axes[0].set_xlabel('时间 (秒) / Время (секунды)')
        axes[0].set_ylabel('振幅 / Амплитуда')
        axes[0].set_title(f'患者 {patient_id} 第 {idx + 1} 次癫痫发作时的平均脑电图信号 / Средний сигнал ЭЭГ пациента {patient_id} во время {idx + 1}-го приступа эпилепсии')
        axes[0].grid(True)

        # 1）构建信号的频谱图
        axes[1].specgram(filtered_data, Fs=fs)
        axes[1].set_xlabel('时间 (秒) / Время (секунды)')
        axes[1].set_ylabel('频率 (赫兹) / Частота (Герц)')
        axes[1].set_title(f'患者 {patient_id} 第 {idx + 1} 次癫痫发作时滤波后脑电图信号的频谱图 / Спектрограмма отфильтрованного сигнала ЭЭГ пациента {patient_id} во время {idx + 1}-го приступа эпилепсии')

        # 2）构建小波变换（scalegram）
        scales = np.arange(1, 128)
        coeffs, freqs = pywt.cwt(filtered_data, scales, 'morl', sampling_period=1 / fs)
        im = axes[2].imshow(np.abs(coeffs), extent=[0, len(filtered_data) / fs, np.min(freqs), np.max(freqs)],
                            cmap='viridis', aspect='auto', origin='lower')
        axes[2].set_xlabel('时间 (秒) / Время (секунды)')
        axes[2].set_ylabel('频率 (赫兹) / Частота (Герц)')
        axes[2].set_title(f'患者 {patient_id} 第 {idx + 1} 次癫痫发作时滤波后脑电图信号的小波变换图 / Вейвлет - грамма отфильтрованного сигнала ЭЭГ пациента {patient_id} во время {idx + 1}-го приступа эпилепсии')
        fig.colorbar(im, ax=axes[2])

        plt.tight_layout()
        save_path = os.path.join(os.getcwd(), f'combined_seizure_{idx + 1}_{patient_id}.png')
        plt.savefig(save_path)
        plt.close()

else:
    print(f'患者 {patient_id} 没有记录到癫痫发作。 / У пациента {patient_id} не зарегистрировано приступов эпилепсии.')
